{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PATRICIACORTIZODEARG\\\\projects\\\\food_order\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context'; // cria o componente Cart que renderiza os cartItems\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  // armazena as infos do cartContext\n  const cartCtx = useContext(CartContext); // acessa o totalAmount do cartContext atraves do cartCtx e define 2 casas decimais através do toFixed(2)\n  // essa informaçao é inserida num template literal `` para adicionar o dollar sign $\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`; // verifica se o cartCtz não está vazio\n\n  const hasItems = cartCtx.items.length > 0; // funçao que remove items do cart vai ser passada ao componente cartItem com pointer dentro da props onRemove\n\n  const cartItemRemoveHandler = id => {}; // funçao que adiciona items ao cart e vai ser passada ao componente cartItem com pointer dentro da props onAdd\n\n\n  const cartItemAddHandler = item => {};\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    clasName: classes[`cart-items`],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this); // retorna o HTML/JSX\n\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: // pointer para a funçao totalAmount\n        totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[`button--alt`],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), // rederiza condicionalmente o botao order\n      hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/PATRICIACORTIZODEARG/projects/food_order/src/components/Cart/Cart.js"],"names":["useContext","Modal","CartItem","classes","CartContext","Cart","props","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","cartItemAddHandler","item","cartItems","map","name","amount","price","bind","onClose","total","actions","button"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CAEA;;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEpB;AACA,QAAMC,OAAO,GAAGP,UAAU,CAACI,WAAD,CAA1B,CAHoB,CAKpB;AACA;;AACA,QAAMI,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD,CAPoB,CASpB;;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC,CAVoB,CAYpB;;AACA,QAAMC,qBAAqB,GAAGC,EAAE,IAAI,CAAG,CAAvC,CAboB,CAepB;;;AACA,QAAMC,kBAAkB,GAAGC,IAAI,IAAI,CAAG,CAAtC;;AAEA,QAAMC,SAAS,gBACX;AAAI,IAAA,QAAQ,EAAEd,OAAO,CAAE,YAAF,CAArB;AAAA,cACKI,OAAO,CAACI,KAAR,CAAcO,GAAd,CAAmBF,IAAD,iBACf,QAAC,QAAD;AAEI,MAAA,IAAI,EAAEA,IAAI,CAACG,IAFf;AAGI,MAAA,MAAM,EAAEH,IAAI,CAACI,MAHjB;AAII,MAAA,KAAK,EAAEJ,IAAI,CAACK,KAJhB;AAKI,MAAA,QAAQ,EAAER,qBAAqB,CAACS,IAAtB,CAA2B,IAA3B,EAAiCN,IAAI,CAACF,EAAtC,CALd;AAMI,MAAA,KAAK,EAAEC,kBAAkB,CAACO,IAAnB,CAAwB,IAAxB,EAA8BN,IAA9B;AANX,OACSA,IAAI,CAACF,EADd;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ,CAlBoB,CAiCpB;;;AACA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAER,KAAK,CAACiB,OAAtB;AAAA,eACKN,SADL,eAEI;AAAK,MAAA,SAAS,EAAEd,OAAO,CAACqB,KAAxB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACA;AACAhB,QAAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACsB,OAAxB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAEtB,OAAO,CAAE,aAAF,CAA1B;AAA2C,QAAA,OAAO,EAAEG,KAAK,CAACiB,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGI;AACAb,MAAAA,QAAQ,iBAAI;AAAQ,QAAA,SAAS,EAAEP,OAAO,CAACuB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAnDD;;GAAMrB,I;;KAAAA,I;AAqDN,eAAeA,IAAf","sourcesContent":["import { useContext } from 'react';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\n\n// cria o componente Cart que renderiza os cartItems\nconst Cart = (props) => {\n    \n    // armazena as infos do cartContext\n    const cartCtx = useContext(CartContext);\n\n    // acessa o totalAmount do cartContext atraves do cartCtx e define 2 casas decimais através do toFixed(2)\n    // essa informaçao é inserida num template literal `` para adicionar o dollar sign $\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n\n    // verifica se o cartCtz não está vazio\n    const hasItems = cartCtx.items.length > 0;\n\n    // funçao que remove items do cart vai ser passada ao componente cartItem com pointer dentro da props onRemove\n    const cartItemRemoveHandler = id => { };\n\n    // funçao que adiciona items ao cart e vai ser passada ao componente cartItem com pointer dentro da props onAdd\n    const cartItemAddHandler = item => { };\n\n    const cartItems = (\n        <ul clasName={classes[`cart-items`]}>\n            {cartCtx.items.map((item) => (\n                <CartItem\n                    key={item.id}\n                    name={item.name}\n                    amount={item.amount}\n                    price={item.price}\n                    onRemove={cartItemRemoveHandler.bind(null, item.id)}\n                    onAdd={cartItemAddHandler.bind(null, item)}\n                />\n            ))}\n        </ul>\n    );\n\n    // retorna o HTML/JSX\n    return (\n        <Modal onClose={props.onClose}>\n            {cartItems}\n            <div className={classes.total}>\n                <span>Total Amount</span>\n                <span>{\n                // pointer para a funçao totalAmount\n                totalAmount}</span>\n            </div>\n            <div className={classes.actions}>\n                <button className={classes[`button--alt`]} onClick={props.onClose}>Close</button>\n                {\n                // rederiza condicionalmente o botao order\n                hasItems && <button className={classes.button}>Order</button>}\n            </div>\n        </Modal>\n    );\n};\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}